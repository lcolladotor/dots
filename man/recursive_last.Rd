% Generated by roxygen2 (4.0.2): do not edit by hand
\name{recursive_last}
\alias{recursiveLast}
\alias{recursive_last}
\title{Recursively get the last element}
\usage{
recursive_last(x, level = 1L, ...)
}
\arguments{
\item{x}{An object such as a vector or a list that has \code{'['} or
\code{'[['} methods defined for it}

\item{level}{An integer greater or equal to 1 specifying how far to take the
recursion.}

\item{...}{Advanced arguments.}
}
\description{
From a complicated object such as nested lists, extract the last element.
}
\examples{
## Define a complicated list where it's second object is a list itself
l2 <- list(j = 21:30, k = list(a = 1:10, b = 11:20))

## Run with defaults
recursive_last(l2)

## Run 2 levels of recursion
recursive_last(l2, level = 2L)

## Change the advanced argument 'selector' to '[['
recursive_last(l2, level = 2L, selector = '[[')

## Go 3 levels deep
recursive_last(l2, level = 3L, selector = '[[')

## Go 2 levels deep using different selectors at each level
recursive_last(l2, level = 2L, selector = c('[', '[['))
}
\author{
L. Collado-Torres
}
\seealso{
\link{dots}, \link{last}
}

